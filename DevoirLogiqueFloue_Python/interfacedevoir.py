# -*- coding: utf-8 -*-
"""InterfaceDevoir.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bhqDyyQpFsQmeQRmnULTgg_LIgGNdTa5
"""

#import nbimporter
from devoirlogiqueflouekby import *
import tkinter as tk
from tkinter import ttk
import random
from PIL import Image, ImageTk
import time
from tkinter import PhotoImage

    
class PageAccueil(tk.Tk):

    imageChe = Image.open("chemise.png")
    #photoChe = ImageTk.PhotoImage(imageChe)
    imageCha = Image.open("chaussures.png")
    #photoCha = ImageTk.PhotoImage(imageCha)
    imagePan = Image.open("pantalon.png")
    #photoPan = ImageTk.PhotoImage(imagePan)

    def __init__(self):
        #tk.Tk.__init__(self)
        super().__init__()
        #global imageChe, photoChe, imagePan, photoPan, imageCha, photoCha
        self.title("Page d'accueil")
        self.geometry("1000x510")
        self.configure(bg='#03F2F1')

        self.photoChe = ImageTk.PhotoImage(self.imageChe)
        self.photoCha = ImageTk.PhotoImage(self.imageCha)
        self.photoPan = ImageTk.PhotoImage(self.imagePan)
        
        self.imageChe = Image.open("chemise.png")
        self.photoChe = ImageTk.PhotoImage(self.imageChe)
        self.imagePan = Image.open("pantalon.png")
        self.photoPan = ImageTk.PhotoImage(self.imagePan)
        self.imageCha = Image.open("chaussures.png")
        self.photoCha = ImageTk.PhotoImage(self.imageCha)
        
        s = ttk.Style()
        s.configure('My.TFrame', background='#00E97B', font=("Helvetica", 14))
        s.configure('My.TLabel', background='#f0f0f0', font=("Helvetica", 14), foreground='black')
        
        self.accueil_frame = ttk.Frame(self, padding=125, relief='solid', borderwidth=1, style='My.TFrame')
        self.accueil_frame.pack(pady=15, expand=True)

        
        self.button_quitter = tk.Button(self, background="red", font=("Helvetica", 18, "bold"), text="Quitter", command=self.close_Accueil)
        self.button_quitter.pack(pady=20, expand=True)
        self.create_widgets()

    def create_widgets(self):
        self.msg_bienvenu = tk.Label(self.accueil_frame, text="BIENVENU DANS NOTRE GUIDE", font=("Helvetica", 21, "bold", "italic"), foreground="blue", background="#C2F100")
        self.msg_bienvenu.grid(row=0, column=1, pady=10)
        self.button_chemise = tk.Button(self.accueil_frame, text="Chemise", command=self.open_ChemiseFrame, font=("Helvetica", 18, "bold"), background="#00CBE9")
        self.button_chemise.grid(row=2, column=0, pady=20)
        self.button_pantalon = tk.Button(self.accueil_frame, text="Pantalon", command=self.open_PantalonFrame, font=("Helvetica", 18, "bold"), background="#00CBE9")
        self.button_pantalon.grid(row=2, column=1, pady=10)
        self.button_chaussure = tk.Button(self.accueil_frame, text="Chaussure", command=self.open_ChaussureFrame, font=("Helvetica", 18, "bold"), background="#00CBE9")
        self.button_chaussure.grid(row=2, column=2, pady=20)

    def open_ChemiseFrame(self):
        self.destroy()
        chemiseFrame = Chemise()
        
    def open_PantalonFrame(self):
        self.destroy()
        pantalonFrame = Pantalon()
    
    def open_ChaussureFrame(self):
        self.destroy()
        chaussureFrame = Chaussure()
    
    def close_Accueil(self):
        self.destroy()
        

class Chemise(tk.Toplevel):
    def __init__(self):
        tk.Toplevel.__init__(self)
        self.title("Guide Chemise")
        self.geometry("580x460")
        self.configure(bg='#03F2F1')

        # Création d'un style pour les widgets (les composants de l'interface)
        s = ttk.Style()
        s.configure('My.TFrame', background='#03F2F1')
        s.configure('My.TLabel', background='#f0f0f0', font=("Helvetica", 14), foreground='black')
        s.configure('My.TButton', font=("Helvetica", 14), foreground='black', background='#ADD8E6')
        s.configure('My.TEntry', font=("Helvetica", 14), background='#F5F5DC')
        
        # Création d'un conteneur pour les entrées de texte et les textes
        self.inputs_frame = ttk.Frame(self, padding=15, relief='solid', borderwidth=1)
        self.inputs_frame.pack(pady=1, expand=True)
        
        # Ajout des entrées de texte et des textes
        self.labelTourTaille = tk.Label(self.inputs_frame, justify='left', text="Tour de taille : ", font=("Helvetica",14))
        self.labelTourTaille.grid(row=0, column=0)
        self.tt_entry = tk.Entry(self.inputs_frame, font=("Helvetica", 14), width=20)
        self.tt_entry.grid(row=0, column=1)
        
        self.labelTourPoitrine = tk.Label(self.inputs_frame, justify='left', text="Tour de poitrine : ", font=("Helvetica",14))
        self.labelTourPoitrine.grid(row=1, column=0)
        self.tp_entry = tk.Entry(self.inputs_frame, font=("Helvetica", 14), width=20)
        self.tp_entry.grid(row=1, column=1)
        
        self.labelLgdos = tk.Label(self.inputs_frame, justify='left', text="Longueur du dos :", font=("Helvetica",14))
        self.labelLgdos.grid(row=2, column=0)
        self.ld_entry = tk.Entry(self.inputs_frame, font=("Helvetica", 14), width=20)
        self.ld_entry.grid(row=2, column=1)
        
        
        # Ajout du bouton pour le résumé
        self.boutonFrame = ttk.Frame(self, padding=10, relief='solid', borderwidth=1, style='My.TFrame')
        self.boutonFrame.pack(pady=2, expand=True)
        
        self.summarize_button = tk.Button(self.boutonFrame, text="Valider", command=self.summarize, font=("Helvetica", 14), background="green")
        self.summarize_button.grid(row=0, column=1, pady=10, padx=10)
        
        self.retour_button = tk.Button(self.boutonFrame, text="Retour", command=self.close_chemiseFrame, font=("Helvetica", 14), background="red")
        self.retour_button.grid(row=0, column=0, pady=10, padx=5)
        
        
        # Création d'un conteneur pour le résumé du texte entré
        self.summary_frame = ttk.Frame(self, padding=10, relief='solid', borderwidth=1)
        self.summary_frame.pack(pady=3, expand=True)
        
        # Ajout de l'étiquette pour le résumé
        self.summary_label = tk.Label(self.summary_frame, text="", font=("Helvetica", 14))
        self.summary_label.grid(row=0, column=1)
        
    # Fonction appelée lorsqu'un bouton est cliqué
    def summarize(self):
        resultat = tailleChemise(int(self.tt_entry.get()), int(self.tp_entry.get()), int(self.ld_entry.get()), 'choix_taille')
        self.summary_label.config(wraplength=1000, justify='left', text="Tour de taille :       {} cm\nTour de poitrine :       {} cm\nLongueur du dos :        {} cm\nRésultat :       {}".format(self.tt_entry.get(), self.tp_entry.get(), self.ld_entry.get(), resultat))

    
    def close_chemiseFrame(self):
        self.destroy()
        accueil = PageAccueil()


class Pantalon(tk.Toplevel): #La classe qui contient toutes les fonctions pour la réalisation de l'interface du jeu et la devination du nombre caché
    def __init__(self):
        tk.Toplevel.__init__(self)
        self.title("Guide Pantalon")
        self.geometry("580x460")
        self.configure(bg='#03F2F1')

        # Création d'un style pour les widgets (les composants de l'interface)
        s = ttk.Style()
        s.configure('My.TFrame', background='#03F2F1')
        s.configure('My.TLabel', background='#f0f0f0', font=("Helvetica", 14), foreground='black')
        s.configure('My.TButton', font=("Helvetica", 14), foreground='black', background='#ADD8E6')
        s.configure('My.TEntry', font=("Helvetica", 14), background='#F5F5DC')
        
        # Création d'un conteneur pour les entrées de texte et les textes
        self.inputs_frame = ttk.Frame(self, padding=15, relief='solid', borderwidth=1)
        self.inputs_frame.pack(pady=1, expand=True)
        
        # Ajout des entrées de texte et des textes
        self.labelTourHanche = tk.Label(self.inputs_frame, justify='left', text="Tour de hanche : ", font=("Helvetica",14))
        self.labelTourHanche.grid(row=0, column=0)
        self.th_entry = tk.Entry(self.inputs_frame, font=("Helvetica", 14), width=20)
        self.th_entry.grid(row=0, column=1)
        
        self.labelLgJmb = tk.Label(self.inputs_frame, justify='left', text="Longueur de jambe : ", font=("Helvetica",14))
        self.labelLgJmb.grid(row=1, column=0)
        self.lj_entry = tk.Entry(self.inputs_frame, font=("Helvetica", 14), width=20)
        self.lj_entry.grid(row=1, column=1)
        
        
        
        # Ajout du bouton pour le résumé
        self.boutonFrame = ttk.Frame(self, padding=10, relief='solid', borderwidth=1, style='My.TFrame')
        self.boutonFrame.pack(pady=2, expand=True)
        
        self.summarize_button = tk.Button(self.boutonFrame, text="Valider", command=self.summarize, font=("Helvetica", 14), background="green")
        self.summarize_button.grid(row=0, column=1, pady=10, padx=10)
        
        self.retour_button = tk.Button(self.boutonFrame, text="Retour", command=self.close_pantalonFrame, font=("Helvetica", 14), background="red")
        self.retour_button.grid(row=0, column=0, pady=10, padx=5)
        
        
        # Création d'un conteneur pour le résumé du texte entré
        self.summary_frame = ttk.Frame(self, padding=10, relief='solid', borderwidth=1)
        self.summary_frame.pack(pady=3, expand=True)
        
        # Ajout de l'étiquette pour le résumé
        self.summary_label = tk.Label(self.summary_frame, text="", font=("Helvetica", 14))
        self.summary_label.grid(row=0, column=1)
        
    # Fonction appelée lorsqu'un bouton est cliqué
    def summarize(self):
        resultat = taillePantalon(float(self.lj_entry.get()), float(self.th_entry.get()), 'choix_taille')
        self.summary_label.config(wraplength=1000, justify='left', text="Tour de hanche :\t\t{} cm\nLongueur de jambe :\t\t{} cm\nRésultat :\t\t\t{}".format(self.th_entry.get(), self.lj_entry.get(), resultat))
    
    def close_pantalonFrame(self):
        self.destroy()
        accueil = PageAccueil()

class Chaussure(tk.Toplevel): #La classe qui contient toutes les fonctions pour la réalisation de l'interface du jeu et la devination du nombre caché
    def __init__(self):
        tk.Toplevel.__init__(self)
        self.title("Guide Pantalon")
        self.geometry("580x460")
        self.configure(bg='#03F2F1')

        # Création d'un style pour les widgets (les composants de l'interface)
        s = ttk.Style()
        s.configure('My.TFrame', background='#03F2F1')
        s.configure('My.TLabel', background='#f0f0f0', font=("Helvetica", 14), foreground='black')
        s.configure('My.TButton', font=("Helvetica", 14), foreground='black', background='#ADD8E6')
        s.configure('My.TEntry', font=("Helvetica", 14), background='#F5F5DC')
        
        # Création d'un conteneur pour les entrées de texte et les textes
        self.inputs_frame = ttk.Frame(self, padding=15, relief='solid', borderwidth=1)
        self.inputs_frame.pack(pady=1, expand=True)
        
        # Ajout des entrées de texte et des textes
        self.labelLongPied = tk.Label(self.inputs_frame, justify='left', text="Longueur du pied : ", font=("Helvetica",14))
        self.labelLongPied.grid(row=0, column=0)
        self.lp_entry = tk.Entry(self.inputs_frame, font=("Helvetica", 14), width=20)
        self.lp_entry.grid(row=0, column=1)
        
        
        
        # Ajout du bouton pour le résumé
        self.boutonFrame = ttk.Frame(self, padding=10, relief='solid', borderwidth=1, style='My.TFrame')
        self.boutonFrame.pack(pady=2, expand=True)
        
        self.summarize_button = tk.Button(self.boutonFrame, text="Valider", command=self.summarize, font=("Helvetica", 14), background="green")
        self.summarize_button.grid(row=0, column=1, pady=10, padx=10)
        
        self.retour_button = tk.Button(self.boutonFrame, text="Retour", command=self.close_chaussureFrame, font=("Helvetica", 14), background="red")
        self.retour_button.grid(row=0, column=0, pady=10, padx=5)
        
        
        # Création d'un conteneur pour le résumé du texte entré
        self.summary_frame = ttk.Frame(self, padding=10, relief='solid', borderwidth=1)
        self.summary_frame.pack(pady=3, expand=True)
        
        # Ajout de l'étiquette pour le résumé
        self.summary_label = tk.Label(self.summary_frame, text="", font=("Helvetica", 14))
        self.summary_label.grid(row=0, column=1)
        
    # Fonction appelée lorsqu'un bouton est cliqué
    def summarize(self):
        
        resultat = tailleChaussure(float(self.lp_entry.get()), 'choix_chaussure')
        self.summary_label.config(wraplength=1000, justify='left', text="Longueur du pied :\t\t{} cm\nRésultat :\t\t\t{}".format(self.lp_entry.get(), resultat))
    
    def close_chaussureFrame(self):
        self.destroy()
        accueil = PageAccueil()

            

if __name__ == '__main__': # exécution de la fonction principale du programme
    game = PageAccueil() #création de l'objet de la classe
    game.mainloop() # lancement le l'interface