# -*- coding: utf-8 -*-
"""DevoirLogiqueFloueKBY.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oluMYDBqG6mDeRW8k9LNuOwvSuBP-bTu
"""

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl 
import matplotlib.pyplot as plt

def antecedant():
    """ Cette fonction declare les antecedants"""

    #La tour de taille est situÃ©e dans un intervalle 
    #taille = ctrl.Antecedent(np.arange(164, 200, 2), 'taille')
    tour_taille = ctrl.Antecedent(np.arange(52, 93, 2), 'tour_taille')
    #La tour de poitrine est situÃ©e dans un intervalle
    tour_poitrine = ctrl.Antecedent(np.arange(70, 111, 2), 'tour_poitrine')
    # Longueur dos
    taille_dos = ctrl.Antecedent(np.arange(68, 73, 1), 'taille_dos')
    hanche = ctrl.Antecedent(np.arange(88, 108, 0.5), 'hanche')
    longueur_jambe = ctrl.Antecedent(np.arange(73, 83, 1), 'longueur_jambe')
    
    taille = ctrl.Antecedent(np.arange(22.3, 39.9, 0.1), 'taille')

    return tour_taille, tour_poitrine, taille_dos, hanche, longueur_jambe, taille

def consequence():
    """ Declaration de la consÃ©quence """
    choix_taille = ctrl.Consequent(np.arange(0, 100, 2), 'choix_taille')
    choix_chaussure = ctrl.Consequent(np.arange(0, 120, 10), 'choix_chaussure')

    return choix_taille, choix_chaussure

def defuzzification(x):
    if x >= 0 and x < 20:
        return 'XS'
    elif x >= 20 and x < 40:
        return 'S'
    elif x >= 40 and x < 60:
        return 'M'
    elif x >= 60 and x < 80:
        return 'L'
    elif x >= 80 and x <= 100:
        return 'XL'

    
def defuzzificationChaussure(x):
    if x >= 0 and x < 10:
        return '35'
    elif x >= 10 and x < 20:
        return '36'
    elif x >= 20 and x < 30:
        return '37'
    elif x >= 30 and x < 40:
        return '38'
    elif x >= 40 and x < 50:
        return '39'
    elif x >= 50 and x < 60:
        return '40'
    elif x >= 60 and x < 70:
        return '41'
    elif x >= 70 and x < 80:
        return '42'
    elif x >= 80 and x < 90:
        return '43'
    elif x >= 90 and x < 100:
        return '44'
    elif x >= 100 and x < 110:
        return '45'
    elif x >= 110 and x < 120:
        return '46'

def definitionRegleChem():
    rule1 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XS'] & tour_taille['XS'], choix_taille['XS'])
    rule2 = ctrl.Rule(taille_dos['S'] & tour_poitrine['S'] & tour_taille['S'], choix_taille['S'])
    rule3 = ctrl.Rule(taille_dos['M'] & tour_poitrine['M'] & tour_taille['M'], choix_taille['M'])
    rule4 = ctrl.Rule(taille_dos['L'] & tour_poitrine['L'] & tour_taille['L'], choix_taille['L'])
    rule5 = ctrl.Rule(taille_dos['XL'] & tour_poitrine['XL'] & tour_taille['XL'], choix_taille['XL'])

    rule6 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XS'] & tour_taille['S'], choix_taille['S'])
    rule7 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XS'] & tour_taille['M'], choix_taille['M'])
    rule8 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XS'] & tour_taille['L'], choix_taille['L'])
    rule9 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XS'] & tour_taille['XL'], choix_taille['XL'])

    rule10 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['M'] & tour_taille['XS'], choix_taille['M'])
    rule11 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['L'] & tour_taille['XS'], choix_taille['L'])
    rule12 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['S'] & tour_taille['XS'], choix_taille['S'])
    rule13 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XL'] & tour_taille['XS'], choix_taille['XL'])

    rule14 = ctrl.Rule(taille_dos['S'] & tour_poitrine['XS'] & tour_taille['S'], choix_taille['S'])
    rule15 = ctrl.Rule(taille_dos['S'] & tour_poitrine['XS'] & tour_taille['M'], choix_taille['M'])
    rule16 = ctrl.Rule(taille_dos['S'] & tour_poitrine['XS'] & tour_taille['L'], choix_taille['L'])
    rule17 = ctrl.Rule(taille_dos['S'] & tour_poitrine['XS'] & tour_taille['XL'], choix_taille['XL'])

    rule18 = ctrl.Rule(taille_dos['S'] & tour_poitrine['M'] & tour_taille['XS'], choix_taille['M'])
    rule19 = ctrl.Rule(taille_dos['S'] & tour_poitrine['L'] & tour_taille['XS'], choix_taille['L'])
    rule20 = ctrl.Rule(taille_dos['S'] & tour_poitrine['S'] & tour_taille['XS'], choix_taille['S'])
    rule21 = ctrl.Rule(taille_dos['S'] & tour_poitrine['XL'] & tour_taille['XS'], choix_taille['XL'])

    rule22 = ctrl.Rule(taille_dos['M'] & tour_poitrine['XS'] & tour_taille['S'], choix_taille['S'])
    rule23 = ctrl.Rule(taille_dos['M'] & tour_poitrine['XS'] & tour_taille['M'], choix_taille['M'])
    rule24 = ctrl.Rule(taille_dos['M'] & tour_poitrine['XS'] & tour_taille['L'], choix_taille['L'])
    rule25 = ctrl.Rule(taille_dos['M'] & tour_poitrine['XS'] & tour_taille['XL'], choix_taille['XL'])

    rule26 = ctrl.Rule(taille_dos['M'] & tour_poitrine['M'] & tour_taille['XS'], choix_taille['M'])
    rule27 = ctrl.Rule(taille_dos['M'] & tour_poitrine['L'] & tour_taille['XS'], choix_taille['L'])
    rule28 = ctrl.Rule(taille_dos['M'] & tour_poitrine['S'] & tour_taille['XS'], choix_taille['S'])
    rule29 = ctrl.Rule(taille_dos['M'] & tour_poitrine['XL'] & tour_taille['XS'], choix_taille['XL'])

    rule30 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['S'] & tour_taille['S'], choix_taille['S'])
    rule31 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['S'] & tour_taille['M'], choix_taille['M'])
    rule32 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['S'] & tour_taille['L'], choix_taille['L'])
    rule33 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['S'] & tour_taille['XL'], choix_taille['XL'])

    rule34 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['M'] & tour_taille['S'], choix_taille['M'])
    rule35 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['M'] & tour_taille['M'], choix_taille['M'])
    rule36 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['M'] & tour_taille['L'], choix_taille['L'])
    rule37 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['M'] & tour_taille['XL'], choix_taille['XL'])

    rule38 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['L'] & tour_taille['S'], choix_taille['L'])
    rule39 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['L'] & tour_taille['M'], choix_taille['L'])
    rule40 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['L'] & tour_taille['L'], choix_taille['L'])
    rule41 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['L'] & tour_taille['XL'], choix_taille['XL'])

    rule42 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XL'] & tour_taille['S'], choix_taille['XL'])
    rule43 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XL'] & tour_taille['M'], choix_taille['XL'])
    rule44 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XL'] & tour_taille['L'], choix_taille['XL'])
    rule45 = ctrl.Rule(taille_dos['XS'] & tour_poitrine['XL'] & tour_taille['XL'], choix_taille['XL'])

    rule46 = ctrl.Rule(tour_poitrine['XS'] & tour_taille['XS'], choix_taille['XS'])
    rule47 = ctrl.Rule(tour_poitrine['S'] & tour_taille['S'], choix_taille['S'])
    rule48 = ctrl.Rule(tour_poitrine['M'] & tour_taille['M'], choix_taille['M'])
    rule49 = ctrl.Rule(tour_poitrine['L'] & tour_taille['L'], choix_taille['L'])
    rule50 = ctrl.Rule(tour_poitrine['XL'] & tour_taille['XL'], choix_taille['XL'])

    rule51 = ctrl.Rule(tour_poitrine['L'] & tour_taille['XS'], choix_taille['L'])
    rule52 = ctrl.Rule(tour_poitrine['L'] & tour_taille['S'], choix_taille['L'])
    rule53 = ctrl.Rule(tour_poitrine['L'] & tour_taille['M'], choix_taille['M'])
    rule54 = ctrl.Rule(tour_poitrine['XL'] & tour_taille['L'], choix_taille['XL'])
    rule55 = ctrl.Rule(tour_poitrine['XL'] & tour_taille['XL'], choix_taille['XL'])

    return [rule1, rule2, rule3, rule4, rule5, 
          rule6, rule7, rule8, rule9, rule10,
          rule11, rule12, rule13, rule14,
          rule15, rule16, rule17, rule18,
          rule19, rule20, rule21, rule22,
          rule23, rule24, rule25, rule26,
          rule27, rule28, rule29, rule30,
          rule31, rule32, rule33, rule34,
          rule35, rule36, rule37, rule38,
          rule39, rule40, rule41, rule42,
          rule43, rule44, rule45, rule46,
          rule47, rule48, rule49, rule50,
          rule51, rule52, rule53, rule54, rule55]

def definitionReglePant():
    rule1 = ctrl.Rule(hanche['XS'] & longueur_jambe['XS'], choix_taille['XS'])
    rule2 = ctrl.Rule(hanche['S'] & longueur_jambe['S'], choix_taille['S'])
    rule3 = ctrl.Rule(hanche['M'] & longueur_jambe['M'], choix_taille['M'])
    rule4 = ctrl.Rule(hanche['L'] & longueur_jambe['L'], choix_taille['L'])
    rule5 = ctrl.Rule(hanche['XL'] & longueur_jambe['XL'], choix_taille['XL'])
    rule6 = ctrl.Rule(hanche['XS'] & longueur_jambe['S'], choix_taille['XS'])
    rule7 = ctrl.Rule(hanche['XS'] & longueur_jambe['M'], choix_taille['M'])
    rule8 = ctrl.Rule(hanche['XS'] & longueur_jambe['L'], choix_taille['M'])
    rule9 = ctrl.Rule(hanche['XS'] & longueur_jambe['XL'], choix_taille['L'])
    rule10 = ctrl.Rule(hanche['S'] & longueur_jambe['XS'], choix_taille['S'])
    rule11 = ctrl.Rule(hanche['S'] & longueur_jambe['M'], choix_taille['M'])
    rule12 = ctrl.Rule(hanche['S'] & longueur_jambe['L'], choix_taille['M'])
    rule13 = ctrl.Rule(hanche['S'] & longueur_jambe['XL'], choix_taille['L'])
    rule14 = ctrl.Rule(hanche['L'] & longueur_jambe['XS'], choix_taille['M'])
    rule15 = ctrl.Rule(hanche['L'] & longueur_jambe['S'], choix_taille['M'])
    rule16 = ctrl.Rule(hanche['L'] & longueur_jambe['M'], choix_taille['L'])
    rule17 = ctrl.Rule(hanche['L'] & longueur_jambe['XL'], choix_taille['L'])
    rule18 = ctrl.Rule(hanche['XL'] & longueur_jambe['XS'], choix_taille['M'])
    rule19 = ctrl.Rule(hanche['XL'] & longueur_jambe['S'], choix_taille['M'])
    rule20 = ctrl.Rule(hanche['XL'] & longueur_jambe['M'], choix_taille['L'])
    rule21 = ctrl.Rule(hanche['XL'] & longueur_jambe['L'], choix_taille['L'])
    rule22 = ctrl.Rule(hanche['M'] & longueur_jambe['XS'], choix_taille['S'])
    rule23 = ctrl.Rule(hanche['M'] & longueur_jambe['S'], choix_taille['M'])
    rule24 = ctrl.Rule(hanche['M'] & longueur_jambe['L'], choix_taille['M'])
    rule25 = ctrl.Rule(hanche['M'] & longueur_jambe['XL'], choix_taille['L'])

    return [rule1, rule2, rule3, rule4, rule5, 
          rule6, rule7, rule8, rule9, rule10,
          rule11, rule12, rule13, rule14,
          rule15, rule16, rule17, rule18,
          rule19, rule20, rule21, rule22,
          rule23, rule24, rule25]


def definitionRegleChaussure():
   
    rule1 = ctrl.Rule(taille['35'], choix_chaussure['35'])
    rule2 = ctrl.Rule(taille['36'], choix_chaussure['36'])
    rule3 = ctrl.Rule(taille['37'], choix_chaussure['37'])
    rule4 = ctrl.Rule(taille['38'], choix_chaussure['38'])
    rule5 = ctrl.Rule(taille['39'], choix_chaussure['39'])
    rule6 = ctrl.Rule(taille['40'], choix_chaussure['40'])
    rule7 = ctrl.Rule(taille['41'], choix_chaussure['41'])
    rule8 = ctrl.Rule(taille['42'], choix_chaussure['42'])
    rule9 = ctrl.Rule(taille['43'], choix_chaussure['43'])
    rule10 = ctrl.Rule(taille['44'], choix_chaussure['44'])
    rule11 = ctrl.Rule(taille['45'], choix_chaussure['45'])
    rule12 = ctrl.Rule(taille['46'], choix_chaussure['46'])
            
    return [rule1, rule2, rule3, rule4, rule5, rule6, 
           rule7, rule8, rule9, rule10, rule11, rule12,]


def configurationChemise():
    """ Configuration des variables et des rÃ¨gles pour le choix de la taille de la chemise """
    global tour_taille, tour_poitrine, taille_dos,choix_taille
    #AntÃ©cedants et consÃ©quence
    tour_taille, tour_poitrine, taille_dos = antecedant()[0], antecedant()[1], antecedant()[2]
    choix_taille = consequence()[0]

    # Configuration longueur du dos
    taille_dos_XS = fuzz.trapmf(taille_dos.universe, [68, 69, 70, 70])
    taille_dos_S = fuzz.trapmf(taille_dos.universe, [69, 70, 71, 71])
    taille_dos_M = fuzz.trapmf(taille_dos.universe, [70, 71, 72, 72])
    taille_dos_L = fuzz.trapmf(taille_dos.universe, [71, 72, 73, 73])
    taille_dos_XL = fuzz.trapmf(taille_dos.universe, [72, 73, 74, 74])
    taille_dos['XS'] = taille_dos_XS
    taille_dos['S'] = taille_dos_S
    taille_dos['M'] = taille_dos_M
    taille_dos['L'] = taille_dos_L
    taille_dos['XL'] = taille_dos_XL

    # Configuration de la tour de TAILLE
    tour_taille_XS = fuzz.trapmf(tour_taille.universe, [52, 52, 60, 61])
    tour_taille_S = fuzz.trapmf(tour_taille.universe, [60, 61, 68, 69])
    tour_taille_M = fuzz.trapmf(tour_taille.universe, [68, 69, 76, 77])
    tour_taille_L = fuzz.trapmf(tour_taille.universe, [76, 77, 84, 85])
    tour_taille_XL = fuzz.trapmf(tour_taille.universe, [84, 85, 92, 93])
    tour_taille['XS'] = tour_taille_XS
    tour_taille['S'] = tour_taille_S
    tour_taille['M'] = tour_taille_M
    tour_taille['L'] = tour_taille_L
    tour_taille['XL'] = tour_taille_XL

    # Configuration du tour de poitrine
    tour_poitrine_XS = fuzz.trapmf(tour_poitrine.universe, [70, 70, 78, 79])
    tour_poitrine_S = fuzz.trapmf(tour_poitrine.universe, [78, 79, 86, 87])
    tour_poitrine_M = fuzz.trapmf(tour_poitrine.universe, [86, 87, 94, 95])
    tour_poitrine_L = fuzz.trapmf(tour_poitrine.universe, [94, 95, 102, 103])
    tour_poitrine_XL = fuzz.trapmf(tour_poitrine.universe, [102, 103, 110, 110])
    tour_poitrine['XS'] = tour_poitrine_XS
    tour_poitrine['S'] = tour_poitrine_S
    tour_poitrine['M'] = tour_poitrine_M
    tour_poitrine['L'] = tour_poitrine_L
    tour_poitrine['XL'] = tour_poitrine_XL

    # Configuration du Choix
    choix_XS = fuzz.trapmf(choix_taille.universe, [0, 0, 19, 19])
    choix_S = fuzz.trapmf(choix_taille.universe, [20, 20, 39, 39])
    choix_M = fuzz.trapmf(choix_taille.universe, [40, 40, 59, 59])
    choix_L = fuzz.trapmf(choix_taille.universe, [60, 60, 79, 79])
    choix_XL = fuzz.trapmf(choix_taille.universe, [80, 80, 100, 100])
    choix_taille['XS'] = choix_XS
    choix_taille['S'] = choix_S
    choix_taille['M'] = choix_M
    choix_taille['L'] = choix_L
    choix_taille['XL'] = choix_XL


    # Configuration des rÃ¨gles
    choix_regles = ctrl.ControlSystem(definitionRegleChem())
    choisir = ctrl.ControlSystemSimulation(choix_regles)

    return choisir


def configurationPantalon():

    global tour_taille, tour_poitrine, taille_dos, hanche, longueur_jambe, choix_taille, choix_chaussure
    hanche, longueur_jambe = antecedant()[3], antecedant()[4]
    choix_taille = consequence()[0]

    #configuration longueur de hanche
    hanche_XS = fuzz.trapmf(hanche.universe, [88, 88, 92, 93])
    hanche_S = fuzz.trapmf(hanche.universe, [92, 93, 96, 97])
    hanche_M = fuzz.trapmf(hanche.universe, [96, 97, 100, 101])
    hanche_L = fuzz.trapmf(hanche.universe, [100, 101, 104, 105])
    hanche_XL = fuzz.trapmf(hanche.universe, [104, 105, 108, 109])

    hanche['XS'] = hanche_XS
    hanche['S'] = hanche_S
    hanche['M'] = hanche_M
    hanche['L'] = hanche_L
    hanche['XL'] = hanche_XL

    #Configuration longueur de jambe
    longueur_jambe_XS = fuzz.trapmf(longueur_jambe.universe, [73, 74, 75, 76])
    longueur_jambe_S = fuzz.trapmf(longueur_jambe.universe, [75, 76, 77, 78])
    longueur_jambe_M = fuzz.trapmf(longueur_jambe.universe, [77, 78, 79, 80])
    longueur_jambe_L = fuzz.trapmf(longueur_jambe.universe, [79, 80, 81, 82])
    longueur_jambe_XL = fuzz.trapmf(longueur_jambe.universe, [81, 82, 83, 84])

    longueur_jambe['XS'] = longueur_jambe_XS
    longueur_jambe['S'] = longueur_jambe_S
    longueur_jambe['M'] = longueur_jambe_M
    longueur_jambe['L'] = longueur_jambe_L
    longueur_jambe['XL'] = longueur_jambe_XL

    # Configuration du Choix
    choix_XS = fuzz.trapmf(choix_taille.universe, [0, 0, 19, 19])
    choix_S = fuzz.trapmf(choix_taille.universe, [20, 20, 39, 39])
    choix_M = fuzz.trapmf(choix_taille.universe, [40, 40, 59, 59])
    choix_L = fuzz.trapmf(choix_taille.universe, [60, 60, 79, 79])
    choix_XL = fuzz.trapmf(choix_taille.universe, [80, 80, 100, 100])
    choix_taille['XS'] = choix_XS
    choix_taille['S'] = choix_S
    choix_taille['M'] = choix_M
    choix_taille['L'] = choix_L
    choix_taille['XL'] = choix_XL

    # Configuration des rÃ¨gles
    choix_regles = ctrl.ControlSystem(definitionReglePant())
    choisir = ctrl.ControlSystemSimulation(choix_regles)

    return choisir


def configurationChaussure():
    
    #Choix de fonction d'appartenance pour l' Antecedent taille
    global taille,choix_chaussure
    choix_chaussure = consequence()[1]
    taille = antecedant()[5]
    taille_35 = fuzz.trapmf(taille.universe, [22.3, 22.3, 22.7, 22.7])
    taille_36 = fuzz.trapmf(taille.universe, [23, 23, 23.6, 23.6])
    taille_37 = fuzz.trapmf(taille.universe, [23.6, 23.6, 24, 24.3])
    taille_38 = fuzz.trapmf(taille.universe, [24.3, 24.3, 25, 25])
    taille_39 = fuzz.trapmf(taille.universe, [25, 25, 25.6, 25.6])
    taille_40 = fuzz.trapmf(taille.universe, [25.6, 25.6, 26.3, 26.3])
    taille_41 = fuzz.trapmf(taille.universe, [26.3, 26.3, 27, 27])
    taille_42 = fuzz.trapmf(taille.universe, [27, 27, 27.6, 27.6])
    taille_43 = fuzz.trapmf(taille.universe, [27.6, 27.6, 28.3, 28.3])
    taille_44 = fuzz.trapmf(taille.universe, [28.3, 28.3, 29, 29])
    taille_45 = fuzz.trapmf(taille.universe, [29, 29, 29.6, 29.6])
    taille_46 = fuzz.trapmf(taille.universe, [29.6, 29.6, 30.9, 30.9])

    taille['35'] = taille_35
    taille['36'] = taille_36
    taille['37'] = taille_37
    taille['38'] = taille_38
    taille['39'] = taille_39
    taille['40'] = taille_40
    taille['41'] = taille_41
    taille['42'] = taille_42
    taille['43'] = taille_43
    taille['44'] = taille_44
    taille['45'] = taille_45
    taille['46'] = taille_46
    
    #Choix de fonction d'appartenance pour le Consequent choix_chaussure
    choix_35 = fuzz.trapmf(choix_chaussure.universe, [0, 0, 9, 9])
    choix_36 = fuzz.trapmf(choix_chaussure.universe, [10, 10, 19, 19])
    choix_37 = fuzz.trapmf(choix_chaussure.universe, [20, 20, 29, 29])
    choix_38 = fuzz.trapmf(choix_chaussure.universe, [30, 30, 39, 39])
    choix_39 = fuzz.trapmf(choix_chaussure.universe, [40, 40, 49, 49])
    choix_40 = fuzz.trapmf(choix_chaussure.universe, [50, 50, 59, 59])
    choix_41 = fuzz.trapmf(choix_chaussure.universe, [60, 60, 69, 69])
    choix_42 = fuzz.trapmf(choix_chaussure.universe, [70, 70, 79, 79])
    choix_43 = fuzz.trapmf(choix_chaussure.universe, [80, 80, 89, 89])
    choix_44 = fuzz.trapmf(choix_chaussure.universe, [90, 90, 99, 99])
    choix_45 = fuzz.trapmf(choix_chaussure.universe, [100, 100, 109, 109])
    choix_46 = fuzz.trapmf(choix_chaussure.universe, [110, 110, 119, 119])


    choix_chaussure['35'] = choix_35
    choix_chaussure['36'] = choix_36
    choix_chaussure['37'] = choix_37
    choix_chaussure['38'] = choix_38
    choix_chaussure['39'] = choix_39
    choix_chaussure['40'] = choix_40
    choix_chaussure['41'] = choix_41
    choix_chaussure['42'] = choix_42
    choix_chaussure['43'] = choix_43
    choix_chaussure['44'] = choix_44
    choix_chaussure['45'] = choix_45
    choix_chaussure['46'] = choix_46
    
     # Configuration des rÃ¨gles
    choix_regles = ctrl.ControlSystem(definitionRegleChaussure())
    choisir = ctrl.ControlSystemSimulation(choix_regles)

    return choisir


def tailleChemise(vtr_tour_taille, vtr_tour_poitrine, vtr_taille_dos, choix):

    #vtr_tour_taille = int(input("Votre tour de taille (cm)= "))
    #vtr_tour_poitrine = int(input("Votre tour de poitrine (cm)= "))
    #vtr_taille_dos = int(input("Votre longueur dos (cm)= "))
    #vtr_poids = int(input("Votre poids(kg)= "))

    choisir = configurationChemise()

    choisir.input['tour_taille'] = vtr_tour_taille
    choisir.input['tour_poitrine'] = vtr_tour_poitrine
    choisir.input['taille_dos'] = vtr_taille_dos

    choisir.compute()
    retour = defuzzification(choisir.output[choix])
    
    return retour
    
    
def taillePantalon(vtr_longueur_jambe, vtr_hanche, choix):
    """ Choix de la taille du pantalon adaptÃ© """

    choisir = configurationPantalon()

    choisir.input['longueur_jambe'] = vtr_longueur_jambe
    choisir.input['hanche'] = vtr_hanche

    choisir.compute()
    return defuzzification(choisir.output[choix])
    
    
def tailleChaussure(taille_pied, choix):
  
    choisir = configurationChaussure()

    choisir.input['taille'] = taille_pied

    choisir.compute()
    return defuzzificationChaussure(choisir.output[choix])